#!/bin/bash
#
# Copyright:	(C) 2007 Kel Modderman <kel@otaku42.de>
# License:	GPLv2
#
# Provide dialog frontend to ndis driver installation via ssft

###---------------------------------------------------------------###

error() {
	local ETIT="Error"
	local EMSG="An unknown error has occurred, aborting"
	local ERET=999

	case "${1}" in
		ssft)
			echo "ssft not installed"
			echo "------------------"
			echo ""
			echo "The 'ssft' package must be installed."
			echo ""
			echo "Aborting."
			echo ""
			exit 2
			;;
		root)
			ETIT="must be root!"
			EMSG="You must be root to use this program, aborting."
			ERET=3
			;;
		ndis)
			ETIT="ndiswrapper not found!"
			EMSG="The 'ndiswrapper' command was not found in PATH, aborting."
			ERET=4
			;;
		kmod)
			ETIT="ndiswrapper module not installed"
			EMSG="The 'ndiswrapper' kernel module is not installed, aborting."
			ERET=5
			;;
		driv)
			ETIT="driver installation failed"
			EMSG="Failed to install a ndis driver, aborting."
			ERET=6
			;;
		regx)
			ETIT="regexp error"
			EMSG="Unable to determine ndis driver name with regular expression"
			ERET=7
			;;
		nodo)
			ETIT="driver already installed"
			EMSG="The driver you chose is already installed, aborting."
			ERET=8
			;;
		undo)
			ETIT="ndiswrapper failure"
			EMSG="ndiswrapper failed to remove driver that failed installation, aborting."
			ERET=9
			;;
		abort)
			ETIT="aborted installation"
			EMSG="Aborting ndiswrapper installation"
			ERET=255
			;;
	esac

	ssft_display_error "${ETIT}" "${EMSG}"

	exit "${ERET}"
}

usage() {
	cat <<EOF
Navigate the file selection dialog to a directory
containing Windows drivers for your device and
select the .inf or .INF file.

Important: Not all Windows drivers are tested / stable.
If the Windows driver that you use is problematic, try
alternate Windows drivers that others have tested,
especially those in listed at the ndiswrapper wiki:

  http://ndiswrapper.sourceforge.net/

Always, try Windows XP drivers and if Windows XP drivers
are not available, try Windows 2000/2003 drivers. Windows
Vista drivers are not supported (yet) - using Windows
Vista driver will result in many ‘unknown symbol’ error
messages when loading ndiswrapper.
EOF
}

###---------------------------------------------------------------###

source ssft.sh				|| error "ssft"

# the dialog frontend is woeful for this purpose
[[ ${DISPLAY} ]] || SSFT_FRONTEND=text
: ${SSFT_FRONTEND:=$(ssft_choose_frontend)}

! ((UID))				|| error "root"
which ndiswrapper >/dev/null		|| error "ndis"
modprobe -q -i ndiswrapper 2>/dev/null	|| error "kmod"

###---------------------------------------------------------------###

ssft_display_message "Usage" "$(usage)"

while true; do
	unset NDIS_DRIVER

	if ssft_file_selection "Select driver" "Select Windows .inf driver to install."; then
		case "${SSFT_RESULT}" in
			*\.[Ii][Nn][Ff])
				NDIS_DRIVER="${SSFT_RESULT}"
				;;
			*)
				ssft_display_error "Invalid driver" \
					"Invalid Windows driver filename. Not an .inf or .INF file."
				ssft_yesno "try again" \
					"Would you like another attempt at configuring ndiswrapper?" && continue
				error "abort"
				;;
		esac
	else
		error "abort"
	fi

	[[ ${NDIS_DRIVER} =~ '^(.*/)?(.+)\.[Ii][Nn][Ff]$' ]] || error "regx"
	NDIS_DRIVER_NAME=$(tr 'A-Z' 'a-z' <<< ${BASH_REMATCH[2]})

	[[ -d "/etc/ndiswrapper/${NDIS_DRIVER_NAME}" ]] && error "nodo"

	NDIS_INSTALL_RESULT=$(ndiswrapper -i ${NDIS_DRIVER} 2>&1)
	if [[ ${?} -eq 0 ]]; then
		NDIS_MODPROBE_RESULT=$(modprobe ndiswrapper 2>&1)
		if [[ ${?} -eq 0 ]]; then
			ssft_display_message "ndiswrapper installed" \
				"The ndiswrapper kernel module is configured and ready to use."
			break
		else
			ssft_display_emsg "modprobe failed" "${NDIS_MODPROBE_RESULT}"

			if [[ -d "/etc/ndiswrapper/${NDIS_DRIVER_NAME}" ]]; then
				ndiswrapper -r "${NDIS_DRIVER_NAME}" || error "undo"
			fi

			ssft_yesno "try again" \
				"Would you like another attempt at configuring ndiswrapper?" && continue
			error "abort"
		fi
	else
		ssft_display_emsg "ndiswrapper failed" "${NDIS_INSTALL_RESULT}"

		if [[ -d "/etc/ndiswrapper/${NDIS_DRIVER_NAME}" ]]; then
			ndiswrapper -r "${NDIS_DRIVER_NAME}" || error "undo"
		fi

		ssft_yesno "try again" \
			"Would you like another attempt at configuring ndiswrapper?" && continue
		error "abort"
	fi		
done

exit 0
